Recently Done (commit message):

To Do:

## High Priority ##


Make & test command line version
Check coherence length code for known cases

Debug update_interval.
Add key to top right of 1D plot.
Have fitting save random points.
Vary z_scaling as length changes to keep number of points constant or add warning to README about letting length vary.
Don't overwrite old defaults when there are new ones.

## Medium Priority ##

Add simple Save Setting button to GUI.
Change Advanced Output Options to popup?
Move Number of Pixels and Bounds to not Advanced.
Autodetect if defaults.txt is out-of-date??
Check sphere analytic model.
When fitting, improve error handling for OpenCL grid compression.
When fitting, improve error handling of random "ValueError: matrices are not aligned" which occurs during points_inside.dot(np.transpose(rotz.dot(roty).dot(rotx))).

Move other functions (sequence,make_intensity, etc.) somewhere??
Rename newgui.py to mcsas.py or gui.py or something.

Better downsampling & cropping of exp_data (only crop once).
Create test cases (which should also be timed).
Comment & clean up code.
Implement scale parameter.
Add Abort button.
    Try threads, see http://stupidpythonideas.blogspot.com.au/2013/10/why-your-gui-app-freezes.html
    Or http://stackoverflow.com/questions/25828659/tkinter-gui-freezes-when-using-multiprocessing-process
    Or http://stackoverflow.com/questions/10847626/program-freezing-during-the-execution-of-a-function-in-tkinter
Don't overwrite filenames.
Have the center location be a fit parameter.

## Low Priority ##

Enable horizontal multiplot GUI flag
Add separate filenames for fit_results.
Difference plot should always be linear (not log)?
Add initial messages to fitlog (geometry,cropping,downsampling)
Choose dictionary file to load from?
Better to calculate residuals from already run calculations.
Save and load from files?
Enable specifying random seed?
Preconditioning:
   radius of curvature depends on angle
Add ability to change sampling frequency (pixel distance) as a function of position even for non-experimental data.
Check parameters list for duplicates
Do not run Fit if exp_data center is "0 0", or at least do something intelligent.
Add additional variables used by Points_For_Calculation: ave_dist, z_scale?
Add ability to set number of cores:
    `use omp_lib` in each subroutine + `call OMP_SET_NUM_THREADS(n)`


Bounds for variables (specifically rho <1000, maybe radius < 50nm).
   Easy option: add test in residuals; if parameter too far outside range, reset it to it's original value and fit without it, then allow it to vary again?
   Hard option: implement a method down below
      Constrained fitting: https://github.com/lmfit/lmfit-py or http://cars9.uchicago.edu/software/python/lmfit/
      Alternate way to only fit a few parameters: http://stackoverflow.com/questions/12208634/fitting-only-one-paramter-of-a-function-with-many-parameters-in-python
      Geodesic fitting: http://www.physics.byu.edu/faculty/transtrum/ 
